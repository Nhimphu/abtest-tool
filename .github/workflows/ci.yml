name: CI
on:
  push:
  pull_request:
  schedule:
    - cron: '0 3 * * *'
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install Poetry
        run: pipx install poetry
      - name: Check pyproject
        run: poetry check
      - name: Install deps from lock (dev group) and sync env
        run: poetry install --no-interaction --with dev --sync
      - name: Run unit tests
        run: |
          poetry run coverage run -m pytest -q --ignore=tests/test_api_integration.py
      - name: Run integration tests
        run: |
          poetry run pytest -q tests/test_api_integration.py
      - name: Install Qt translation tools
        run: |
          sudo apt-get update
          sudo apt-get install -y qt6-tools-dev-tools qttools5-dev-tools
          if ! command -v lrelease >/dev/null; then
            # Создаём алиас на lrelease-qt6 или lrelease-qt5
            sudo ln -s $(which lrelease-qt6 || which lrelease-qt5) /usr/local/bin/lrelease
          fi
      - name: Update translations
        run: poetry run bash scripts/update_translations.sh
      - name: Build documentation
        run: |
          poetry run sphinx-build -b html -W docs docs/_build/html
      - name: Smoke tests
        if: github.event_name == 'schedule'
        run: poetry run pytest tests/test_logic.py tests/test_flags.py
      - name: Generate coverage badge
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          poetry run coverage xml
          poetry run coverage-badge -o coverage.svg -f

      - name: Commit coverage badge
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            execSync('git config user.name github-actions');
            execSync('git config user.email github-actions@github.com');
            execSync('git add coverage.svg README.md');
            try {
              execSync('git commit -m "Update coverage badge"');
              execSync('git push');
            } catch (error) {
              console.log('No changes to commit');
            }
