name: CI
on:
  push:
  pull_request:
  schedule:
    - cron: '0 3 * * *'
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage coverage-badge mypy
      - name: Run tests
        run: |
          coverage run -m pytest -q
      - name: Run mypy
        run: mypy --config-file mypy.ini src/
      - name: Install Qt translation tools
        run: |
          sudo apt-get update
          sudo apt-get install -y qt6-tools-dev-tools qttools5-dev-tools
          if ! command -v lrelease >/dev/null; then
            # Создаём алиас на lrelease-qt6 или lrelease-qt5
            sudo ln -s $(which lrelease-qt6 || which lrelease-qt5) /usr/local/bin/lrelease
          fi
      - name: Build translations
        run: |
          pylupdate6 src/ui/ui_mainwindow.py src/ui/wizard.py src/main.py \
            -ts translations/app_ru.ts
          python scripts/fill_translations.py
          lrelease translations/app_ru.ts -qm translations/app_ru.qm
          if grep -q 'type="unfinished"' translations/app_ru.ts; then
            echo "Untranslated strings found"
            exit 1
          fi
      - name: Smoke tests
        if: github.event_name == 'schedule'
        run: pytest tests/test_logic.py tests/test_flags.py
      - name: Generate coverage badge
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          coverage xml
          coverage-badge -o coverage.svg -f

      - name: Commit coverage badge
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            execSync('git config user.name github-actions');
            execSync('git config user.email github-actions@github.com');
            execSync('git add coverage.svg README.md');
            try {
              execSync('git commit -m "Update coverage badge"');
              execSync('git push');
            } catch (error) {
              console.log('No changes to commit');
            }
